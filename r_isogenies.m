// This is the Magma code that verifes all the computational parts of the proofs of the paper F. Najman, "On r-isogenies over Q(Î¶r) of elliptic curves with rational j-invariants"




//////////////////////////////////// Proposition 2.5 /////////////////////////////////////////////////

// We now prove Proposition 2.5 for p=<17. This part of the proof was suggested to me by Davide Lombardo. 
// First we construct the subgroups +-H_{1,1} of GL_2(Z/7Z) and G_3 of of GL_2(Z/5Z)


G7 := GL(2,7);
M1 := G7!Matrix(GF(7),2,2,[2,0,0,4]);
M2 := G7!Matrix(GF(7),2,2,[0,2,1,0]);
M3 := G7!Matrix(GF(7),2,2,[-1,0,0,-1]);
Candidate7 := sub<G7 | [M1, M2, M3]>;
Candidate7_2 := sub<G7 | [M1, M2]>;

G5 := GL(2,5);
M1 := G5!Matrix(GF(5),2,2,[2,0,0,2]);
M2 := G5!Matrix(GF(5),2,2,[1,0,0,-1]);
M3 := G5!Matrix(GF(5),2,2,[0,6,3,0]);
Candidate5 := sub<G5 | [M1, M2, M3]>;


//Now we run through all applicable subgroups of GL_2(F_p) and check whether their intersection with SL_2(F_p) acts irreducibly.

for p in [3,5,7,11,13] do
	G := GL(2,p);
	sg := Subgroups(G);	// the conjugacy classes of subgroups of G
	for H in sg do		// loop over subgroups
		sbgH := H`subgroup;
		if &or[ Determinant(h) eq -1 and Trace(h) eq 0 : h in sbgH ] then				// H should contain an element of trace 0 and determinant -1
			if IsIrreducible(sbgH) then								// and act irreducibly
				sbgHSL2 := sbgH meet SL(2,p);							// Consider the intersection H \cap SL_2(F_p)
				OrdDet := #sbgH / #sbgHSL2;							// whose index is |det(H)|
				if OrdDet eq (p-1) and not IsIrreducible(sbgHSL2) then				// If |det(H)|=|F_p*| and (H cap SL_2(F_p)) acts reducibly,
					"p =", p, "index =", #GL(2,p)/#sbgH, "H =", sbgH;			// print H and its index inside GL_2(F_p)
					if p eq 7 and #GL(2,p)/#sbgH eq 56 then
						assert IsConjugate(G7, sbgH, Candidate7);
					end if;
					if p eq 7 and #GL(2,p)/#sbgH eq 112 then
						assert IsConjugate(G7, sbgH, Candidate7_2);
					end if;
					if p eq 5 and #GL(2,p)/#sbgH eq 30 then
						assert IsConjugate(G5, sbgH, Candidate5);
					end if;
				end if;
			end if;
		end if;
	end for;
end for;

// In all cases the program returns true, so the groups that we previously define are the only ones that appear. 


//////////////////////////////////// Proposition 3.1 ///////////////////////////////////////////////

// We check that all the curves in the proof have trivial 2-torsion.

E:=EllipticCurveFromjInvariant(-11^2);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-11*131^3);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-17*373^3/2^17);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-17^2*101^3/2);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-7*11^3);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-7*137^3*2083^3);
assert #TwoTorsionSubgroup(E) eq 1;

///////////////////////////// Proposition 3.2 /////////////////////////

C:=SmallModularCurve(14); // This is X_0(14)
K:=CyclotomicField(7);
E:=ChangeRing(C,K);
DescentInformation(E); // this shows that the rank over Q(\zeta7) is 0 and the torsion  Z/2 x Z/6
g,m:=TorsionSubgroup(E);
P:=m(g.1); 
Q:=m(g.2);  //These two points generate the torsion subgroup. Since the torsion subgroup over QQ is Z/6Z (and generated by the point Q, since it is a rational point of order 6), the points that are not rational are of the form P+i*Q,
for j:=1 to 6 do
	jInvariant(P+j*Q,14);
end for;
//we get that the only rational j-invariant is -3375 as claimed

E:=EllipticCurveFromjInvariant(-3375);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq -7; //the squarefreepart of the discriminant is -7

E:=EllipticCurveFromjInvariant(3^3*5^3*17^3);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq 7; //the squarefreepart of the discriminant is 7


////////////////////////// Proposition 4.2 ///////////////////////////////
//The first part of the proof (r=>17) is similar to the proof of Prop 3.2.

E:=EllipticCurveFromjInvariant(-17* 373^3/2^17);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq -10; //the squarefreepart of the discriminant is -10

E:=EllipticCurveFromjInvariant(-17^2*101^3/2);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq -10; //the squarefreepart of the discriminant is -10

E:=EllipticCurveFromjInvariant(-7*11^3);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq -5; //the squarefreepart of the discriminant is -5


E:=EllipticCurveFromjInvariant(-7*137^3*2083^3);
D:=Discriminant(E);
a,b:=SquarefreeFactorization(Numerator(D)*Denominator(D));
assert a eq -5; //the squarefreepart of the discriminant is -5

// Now we deeal with r=5

C:=SmallModularCurve(20); // This is X_0(14)
K:=CyclotomicField(5);
E:=ChangeRing(C,K);
DescentInformation(E);
assert Rank(E) eq Rank(C); 
assert #TorsionSubgroup(E) eq #TorsionSubgroup(E); 

// Now we deal with r=11
C:=SmallModularCurve(11); // This is X_0(11)
K:=CyclotomicField(11);
E:=ChangeRing(C,K);
assert #TorsionSubgroup(E) eq #TorsionSubgroup(C);
//assert Rank(E) eq Rank(C); //takes a while; this is too slow, instead we use the following 
K1:=Subfields(K,5)[1,1];
K1; // this is the max  real subfield of K
E1:=ChangeRing(C,K1);
assert Rank(E1) eq 0;
assert Rank(QuadraticTwist(E1,-11)) eq 0; //The rank of E(K) is the sum of the rank of E(K1) and E^{-11}(K1)

E:=EllipticCurveFromjInvariant(-11^2);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-2^15);
assert #TwoTorsionSubgroup(E) eq 1;
E:=EllipticCurveFromjInvariant(-11*131^3);
assert #TwoTorsionSubgroup(E) eq 1;

//Finally we deal with r=13.

G:=sub<GL(2,GF(13))|[2,0,0,2],[2,0,0,3],[0,-1,1,0], [1,1,-1,1]>;
G1:=G meet SL(2,GF(13)); 
G1;
[#g: g in Orbits(G1)]; // all orbits (apart from the trivial one) are of length 24







